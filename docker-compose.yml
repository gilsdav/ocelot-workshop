version: "3.7"
services:
  db:
    container_name: PizzaGraphSQL
    image: exoplatform/sqlserver:2017-CU8
    environment:
      - SA_PASSWORD=PizzaGraphQL123+
      - SQLSERVER_DATABASE=PizzaGraphQL
      - SQLSERVER_USER=PizzaGraphQL
      - SQLSERVER_PASSWORD=PizzaGraphQL123+
    ports:
      - "1433:1433"
    networks:
      - private
      - local # for dev
    # healthcheck:
    #   test: /opt/mssql-tools/bin/sqlcmd -S localhost -U "$$SQLSERVER_USER" -P "$$SQLSERVER_PASSWORD" -Q "SELECT name FROM master.sys.databases WHERE name = N'$$SQLSERVER_DATABASE'" || exit 1
    #   interval: 10s
    #   timeout: 3s
    #   retries: 10
    #   start_period: 10s
  pizza-management:
    build: ./services/pizza-management
    image: pizza-management:latest
    ports:
      - "8080:80"
    networks:
      - private
    depends_on:
      - db
  pizza-commands:
    build: ./services/pizza-commands
    image: pizza-commands:latest
    ports:
      - "8081:80"
    depends_on:
      - db
    networks:
      - private
    environment:
      - SERVICE_NUMBER=1
  second-pizza-commands:
    build: ./services/pizza-commands
    image: second-pizza-commands:latest
    ports:
      - "8083:80"
    depends_on:
      - db
    networks:
      - private
    environment:
      - SERVICE_NUMBER=2
  pizza-pricing:
    build: ./services/pizza-pricing
    image: pizza-pricing:latest
    ports:
      - "8082:80"
    networks:
      - private
    depends_on:
      - db
  identity-server:
    build: ./identity-server
    image: identity-server:latest
    ports:
      - "5002:5002"
    networks:
      - local
      - private
      - public
  public_gateway:
    build: './api-gateway/gateway'
    image: public_gateway:latest
    ports:
      - "8091:80"
    networks:
      - public
      - private
    depends_on:
      - identity-server
    volumes:
      - ./api-gateway/config:/app/config
    environment:
      - OCELOT_SCOPE=public
  private_gateway:
    build: './api-gateway/gateway'
    image: private_gateway:latest
    ports:
      - "8092:80"
    networks:
      - local
      - private
    depends_on:
      - identity-server
    volumes:
      - ./api-gateway/config:/app/config
    environment:
      - OCELOT_SCOPE=private
  front-app:
    build: './apps/login-app'
    image: front-app:latest
    ports:
      - "8070:80"
    networks:
      - local
      - private
      - public
    depends_on:
      - identity-server
networks:
  public: {}
  local: {}
  private:
    internal: true